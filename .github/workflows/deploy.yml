name: Deploy to S3 and CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Install AWS CLI
    - name: Install AWS CLI
      run: |
        if ! command -v aws &> /dev/null; then
          echo "AWS CLI not found. Installing..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        else
          echo "AWS CLI is already installed."
        fi

    # Step 3: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    # Step 4: Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Step 5: Clean and Setup Terraform
    - name: Clean and Setup Terraform
      run: |
        echo "Cleaning and setting up Terraform..."
        rm -rf .terraform
        terraform init -reconfigure
        terraform validate
      working-directory: terraform/

    # Step 6: Terraform Plan
    - name: Terraform Plan
      run: |
        echo "Running Terraform Plan..."
        terraform plan -out=tfplan
      working-directory: terraform/
      env:
        TF_VAR_hosted_zone_id: ${{ secrets.HOSTED_ZONE_ID }}

    # Step 7: Terraform Apply
    - name: Terraform Apply
      id: terraform_apply
      run: |
        echo "Applying Terraform changes..."
        terraform apply -auto-approve tfplan
      working-directory: terraform/
      env:
        TF_VAR_hosted_zone_id: ${{ secrets.HOSTED_ZONE_ID }}

    # Step 8: Sync Website Files to S3
    - name: Upload Website Files
      run: |
        echo "Syncing files to S3 bucket..."
        aws s3 sync ./public s3://seehmat.com \
          --delete \
          --acl private
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
