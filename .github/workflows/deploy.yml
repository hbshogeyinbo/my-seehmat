name: CI/CD Workflow for Terraform and Static Site

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Step 3: Initialize Terraform
    - name: Initialize Terraform
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}

    # Step 4: Terraform Validate
    - name: Validate Terraform Code
      run: terraform validate

    # Step 5: Terraform Plan
    - name: Plan Terraform Changes
      run: terraform plan -out=tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}
        TF_VAR_AWS_US_REGION: ${{ secrets.TF_VAR_AWS_US_REGION }}
        TF_VAR_DOMAIN_NAME: ${{ secrets.TF_VAR_DOMAIN_NAME }}
        TF_VAR_KMS_KEY_ARN: ${{ secrets.TF_VAR_KMS_KEY_ARN }}

    # Step 6: Terraform Apply
    - name: Apply Terraform Changes
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}
        TF_VAR_AWS_US_REGION: ${{ secrets.TF_VAR_AWS_US_REGION }}
        TF_VAR_DOMAIN_NAME: ${{ secrets.TF_VAR_DOMAIN_NAME }}
        TF_VAR_KMS_KEY_ARN: ${{ secrets.TF_VAR_KMS_KEY_ARN }}

    # Step 7: Deploy to S3
    - name: Deploy to S3
      run: |
        aws s3 sync ./public s3://seehmatbuck --delete
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}

    # Step 8: Invalidate CloudFront Cache
    - name: Invalidate CloudFront Cache
      run: |
        aws cloudfront create-invalidation --distribution-id EV9MAO6142ML1 --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}
